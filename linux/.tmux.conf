unbind C-b
set -g prefix `
bind-key ` last-window
bind-key e send-prefix

# clock
set-window-option -g clock-mode-colour green #green

# mouse 
set -g mouse on

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M '
# set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

set -g visual-activity off

#Colours for messages
#-------------------------------------------------------#
# enable activity alerts
setw -g monitor-activity off
set -g visual-activity off
 
#Show reloaded message in bright white
set -g message-fg white
set -g message-bg default
set -g message-attr bright
#-------------------------------------------------------#
 
 
# Status line left side
#-------------------------------------------------------#
# Session: 0 1 1 settings
set -g status-left-length 40 
set -g status-left "#[fg=colour245]Session: #S #[fg=colour84]#I #[fg=colour75]#P"
#-------------------------------------------------------#
# Status line left side
#-------------------------------------------------------#
# Session: 0 1 1 settings
set -g status-left-length 40 
set -g status-left "#[fg=colour245]Session: #S #[fg=colour84]#I #[fg=colour75]#P"
#-------------------------------------------------------#

#Window/pane type in centre
#-------------------------------------------------------#
#move bash* to centre
set -g status-justify centre
 
# set the color of the window list (name of the pane)
setw -g window-status-fg colour75
setw -g window-status-bg default 
setw -g window-status-attr dim
#-------------------------------------------------------#

#Time and date on right-hand side
#-------------------------------------------------------#
# Status line right side
# e.g. 28 Nov 18:15
set -g status-right "#[fg=colour245]%d %b #[fg=colour256] %R"
 
# Update the status bar every sixty seconds (for the time)
set -g status-interval 60
#-------------------------------------------------------#


# Start numbering at 1
set -g base-index 1

# status
# set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'
